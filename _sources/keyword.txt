Keyword Arguments
=================


``boxplot`` function
--------------------

.. csv-table:: Required keyword arguments
   :header: "Keyword", "Data Type", "Description", "Example"
   :widths: 20, 10, 40, 20

   "df", "pandas.DataFrame", "DataFrame containing data to plot", "NA"
   "y", "str|list", "name or list of names of y column in df", "'I [A]'"


.. csv-table:: Optional keyword arguments
   :header: "Keyword", "Data Type", "Description", "Default", "Example"
   :widths: 20, 10, 40, 20, 20

   "ax_edge_color", "str", "hex color code for axis edge border color", "fcp_params", "#3b3b3b"
   "ax_face_color", "str", "hex color code for axis fill color", "fcp_params", "#3b3b3b"
   "ax_fig_ws", "int", "axis to figure right whitespace in pixels", "fcp_params", "30"
   "ax_hlines", "list", "list of y-values at which to add horizontal lines", "[]", "[0, 1.4]"
   "ax_label_pad", "int", "label to plot offset padding in pixels", "0", "30"
   "ax_lim", "list", "axes range values [xmin, xmax, ymin, ymax]", "[]", "[0, 100, 0, 200]"
   "ax_lim_pad", "float", "in place of discrete axes limits, adds whitespace to the bottom/top and left/right of the axis by this amount as a percent/100 of the total axis range", "0.05", "NA"
   "ax_scale", "None|str", "set the scale of an axis as linear or log", "None --> linear", "'logx'|'semilogx' for the x-axis, 'logy'|'semilogy' for the y-axis or 'loglog' for both axes"
   "ax_size", "list", "[width, height] of each plot window in pixels", "fcp_params", "[400, 200]"
   "bp_divider_color", "str", "hex color code for divider line color between groups", "fcp_params", "#000000"
   "bp_fill_color", "str", "hex color code for boxplot fill color", "fcp_params", "#ffffff"
   "bp_labels_on", "bool", "toggle on|off boxplot grouping labels", "True", "NA"
   "bp_label_size", "int", "grouping label size", "fcp_params", "12"
   "bp_label_edge_color", "str", "hex color code for boxplot grouping label regions", "fcp_params", "#aaaaaa"
   "bp_label_fill_color", "str", "hex color code for grouping labels", "fcp_params"
   "bp_label_font_size", "int", "grouping label font size", "fcp_params", "12"
   "bp_label_text_color", "str", "hex color code for grouping label text", "fcp_params", "#ff0000"
   "bp_label_text_style", "str", "grouping label text style; use standard mpl styles like 'italic'", "fcp_params", "'italic'"
   "bp_label_text_weight", "str", "grouping label text weight; use standard mpl weights like 'bold'", "fcp_params", "'normal'"
   "bp_name_font_size", "str", "grouping label summary name font size", "fcp_params", "12"
   "bp_name_text_color", "str", "hex color code for grouping label summary name", "fcp_params", "#000000"
   "bp_name_text_style", "str", "grouping label summary name text style; use standard mpl styles like 'italic'", "fcp_params", "'italic'"
   "bp_name_text_weight", "str", "grouping label summary name text weight; use standard mpl weights like 'bold'", "fcp_params", "'normal'"
   "bp_name_ws", "int", "whitespace in pixels between grouping labels under the boxplot and the summary names", "fcp_params", "30"
   "colors", "list", "list of tuple values used to define colors for plotting using RGB/255 mpl style", "palette from defaults.py", "[(0.32, 0.11, 0.33), (0.95, 0.75, 0.55)]"
   "connect_means", "bool", "draw a line connecting the mean value of each group in the boxplot", "False", "NA"
   "dividers", "bool", "show vertical diveider lines between groups", "True", "NA"
   "fig_ax_ws", "int", "number of pixels between the left figure edge and the left axis edge", "fcp_params", "30"
   "fig_edge_color", "str", "hex color code for figure edge color", "fcp_params", "#ffffff"
   "fig_face_color", "str", "hex color code for figure fill color", "fcp_params", "#000000"
   "fig_groups", "list|None", "name of df column by which to group the data and make discrete figures based on the unique values in this column", "None", "Temperature [C]"
   "fig_group_path", "bool", "use the unique grouping item from fig_groups in the plot filename", "False", "NA"
   "filename", "str", "name of saved figure; in None, custom filename will be built based on the data that is plotted", "None", "NA"
   "filter", "str", "str to use in df.query to include or exclude certain data from df.  Note that df.query does not support spaces, parenthesis, or brackets. Spaces should be replaced by '_' and parenthesis/brackets should be dropped from the str.  Example: Temperature [C] --> Temperature_C", "None", "'Substrate==""Si"" & Temperature_C==25'"
   "grid_major", "bool", "turn on|off major gridline visibility", "True", "NA"
   "grid_major_color", "str", "hex color code for major gridline color", "fcp_params", "#aaaaaa"
   "grid_major_linestyle", "str", "matplotlib str code for linestyle", "fcp_params", "-"
   "grid_minor", "bool", "turn on|off major gridline visibility", "False", "NA"
   "grid_minor_color", "str", "hex color code for minor gridline color", "fcp_params", "#aaaaaa"
   "grid_major_linestyle", "str", "matplotlib str code for linestyle", "fcp_params", "--"
   "label_font_size", "int", "font size in pixels for the x and y labels", "fcp_params", "14"
   "label_style", "str", "define the label style. Use standard mpl styles like 'italic'", "fcp_params", "'italic'"
   "label_weight", "str", "define the label weight.  Use standard mpl weights like 'bold'", "fcp_params", "'bold'"
   "leg_bkgrd", "str", "hex color code for legend background", "fcp_params", "#ffffff"
   "leg_border", "str", "hex color code for legend border", "fcp_params", "#000000"
   "leg_groups", "str", "name of df column by which to legend the data", "None", "Substrate"
   "leg_items", "list", "explicit definition of the legend items; ignores any values that are not listed", "[]", "['(1,1), (-2,1)]"
   "leg_on", "bool", "toggle legend visibility", "True", ""
   "leg_title", "str", "title for the legend", "None", "My Legend"
   "line_width", "int", "set the linewidth of connect means line", "1", "2"
   "lines", "bool", "turn plot lines on|off", "True", "NA"
   "marker_size", "int", "set marker size", "fcp_params", "14"
   "marker_type", "str", "set marker type", "None", "o"
   "points", "bool", "turn markers on|off", "True", "NA"
   "save_ext", "str", "filename extension for saved figures", "png", ""
   "save_path", "str", "destination file folder for plots", "None", "C:\data"
   "scalar_y", "bool", "force scalar tick labels on the y-axis instead of powers of ten", "False", "NA"
   "show", "bool", "pop open plot after it is generated.  Otherwise, the plot is just saved", "False", "NA"
   "stat", "str", "statistic to apply to the y-data being plotted.", "None", "median"
   "stat_val", "str", "column name to which the statistic should be applied.  Options include: 'median', 'median_only', 'mean_only', and 'mean'.  When 'only' is in the stat value, median lines and median/mean data points are plotted.  Without 'only', median/mean lines and all raw data points are plotted.", "kwargs['x']", "'Voltage'"
   "tick_major_color", "str", "hex color code for major tick marks", "fcp_params", "#000000"
   "tick_minor_color", "str", "hex color code for minor tick marks", "fcp_params", "#bbbbbb"
   "tick_font_size", "int", "font size for tick labels", "fcp_params", "12"
   "tick_label_color", "str", "hex color code for tick labels", "fcp_params", "#bbbbbb"
   "tick_length", "int", "length of the tick marks", "fcp_params", "10"
   "tick_width", "int", "line width of the tick marks", "fcp_params", "3"
   "title", "str", "plot title", "None", "Sweet Plot"
   "title_edge_color", "str", "hex color code for edge of a box around the plot title", "fcp_params", "#ffffff"
   "title_fill_color", "str", "hex color code for fill of a box around the plot title", "fcp_params", "#ffffff"
   "title_text_color", "str", "hex color code for title color", "fcp_params", "#000000"
   "title_font_size", "int", "font size of plot title", "fcp_params", "16"
   "title_text_style", "str", "define the title style. Use standard mpl styles like 'italic'", "fcp_params", "'normal'"
   "ylabel", "str", "label for primary y-axis", "kwargs['y'] or kwargs['y'][0]", "Current [A]"
   "ymax", "float", "maximum y-value on y-axis", "None", "100"
   "ymin", "float", "minimum y-value of y-axis", "None", "-100"
   "yticks", "int", "specify the number of yticks (not currently supported)", "None (use default)", "4"


``plot`` function
-----------------

.. csv-table:: Required keyword arguments
   :header: "Keyword", "Data Type", "Description", "Example"
   :widths: 20, 10, 40, 20

   "df", "pandas.DataFrame", "DataFrame containing data to plot", "NA"
   "x", "str", "name of x column in df", "'Voltage'"
   "y", "str|list", "name or list of names of y column(s) in df", "'I [A]' or ['I [A]', 'R [ohm]']"


.. csv-table:: Optional keyword arguments
   :header: "Keyword", "Data Type", "Description", "Default", "Example"
   :widths: 20, 10, 40, 20, 20

   "ax_edge_color", "str", "hex color code for axis edge border color", "fcp_params", "#3b3b3b"
   "ax_face_color", "str", "hex color code for axis fill color", "fcp_params", "#3b3b3b"
   "ax_hlines", "list", "list of y-values at which to add horizontal lines", "[]", "[0, 1.4]"
   "ax_label_pad", "int", "label to plot offset padding in pixels", "0", "30"
   "ax_lim", "list", "axes range values [xmin, xmax, ymin, ymax]", "[]", "[0, 100, 0, 200]"
   "ax_lim_pad", "float", "in place of discrete axes limits, adds whitespace to the bottom/top and left/right of the axis by this amount as a percent/100 of the total axis range", "0.05", "NA"
   "ax_scale", "None|str", "set the scale of an axis as linear or log", "None --> linear", "'logx'|'semilogx' for the x-axis, 'logy'|'semilogy' for the y-axis or 'loglog' for both axes"
   "ax_scale2", "None|str", "same as ax_scale but for secondary y-axis when twinx is True", "None", "NA"
   "ax_size", "list", "[width, height] of each plot window in pixels", "fcp_params", "[400, 200]"
   "ax_vlines", "list", "list of x-values at which to add vertical lines", "[]", "NA"
   "cmap", "str", "name of color map to use for plotting", "None --> use color order defined in fcp_params", "jet"
   "col", "str", "name of a column in df to use as a grouping variable for facet grid style plotting; each unique value from df[col] will represent a column of plots in the final figure", "None --> no column grouping", "Temperature [C]"
   "col_label", "str", "a custom label to display for each column in the facet grid plot", "None --> use the value of kwargs['col']", "Temp [C]"
   "col_labels_on", "bool", "toggle visibility of column labels in facet grid", "True", "NA"
   "col_label_size", "int", "label height in pixel for col labels in pixels", "fcp_params", "45"
   "col_label_ws", "int", "whitespace in pixels between axis and col labels in pixels", "fcp_params", "30"
   "col_padding", "int", "whitespace between facet columns in pixels", "fcp_params", "20"
   "colors", "list", "list of tuple values used to define colors for plotting using RGB/255 mpl style", "palette from defaults.py", "[(0.32, 0.11, 0.33), (0.95, 0.75, 0.55)]"
   "cols", "list", "list used to manually define the columns to use in the facet grid. These values must actually be in df[col]", "None", "[25, 75]"
   "fig_ax_ws", "int", "number of pixels between the left figure edge and the left axis edge", "fcp_params", "30"
   "fig_edge_color", "str", "hex color code for figure edge color", "fcp_params", "#ffffff"
   "fig_face_color", "str", "hex color code for figure fill color", "fcp_params", "#000000"
   "fig_groups", "list|None", "name of df column by which to group the data and make discrete figures based on the unique values in this column", "None", "Temperature [C]"
   "fig_group_path", "bool", "use the unique grouping item from fig_groups in the plot filename", "False", "NA"
   "filename", "str", "name of saved figure; in None, custom filename will be built based on the data that is plotted", "None", "NA"
   "filter", "str", "str to use in df.query to include or exclude certain data from df.  Note that df.query does not support spaces, parenthesis, or brackets. Spaces should be replaced by '_' and parenthesis/brackets should be dropped from the str.  Example: Temperature [C] --> Temperature_C", "None", "'Substrate==""Si"" & Temperature_C==25'"
   "grid_major", "bool", "turn on|off major gridline visibility", "True", "NA"
   "grid_major_color", "str", "hex color code for major gridline color", "fcp_params", "#aaaaaa"
   "grid_major_linestyle", "str", "matplotlib str code for linestyle", "fcp_params", "-"
   "grid_minor", "bool", "turn on|off major gridline visibility", "False", "NA"
   "grid_minor_color", "str", "hex color code for minor gridline color", "fcp_params", "#aaaaaa"
   "grid_major_linestyle", "str", "matplotlib str code for linestyle", "fcp_params", "--"
   "label_font_size", "int", "font size in pixels for the x and y labels", "fcp_params", "14"
   "label_style", "str", "define the label style. Use standard mpl styles like 'italic'", "fcp_params", "'italic'"
   "label_weight", "str", "define the label weight.  Use standard mpl weights like 'bold'", "fcp_params", "'bold'"
   "leg_bkgrd", "str", "hex color code for legend background", "fcp_params", "#ffffff"
   "leg_border", "str", "hex color code for legend border", "fcp_params", "#000000"
   "leg_groups", "str", "name of df column by which to legend the data", "None", "Substrate"
   "leg_items", "list", "explicit definition of the legend items; ignores any values that are not listed", "[]", "['(1,1), (-2,1)]"
   "leg_on", "bool", "toggle legend visibility", "True", ""
   "leg_title", "str", "title for the legend", "None", "My Legend"
   "line_color", "str", "hex color code to override the built-in line color cycle", "None", "#112233"
   "line_fit", "None|int", "adds a line fit to the data of polynomial order ``line_fit``", "None", "1"
   "line_style", "str", "set the default line style", "-", "--"
   "line_width", "int", "set the linewidth of curves", "1", "2"
   "lines", "bool", "turn plot lines on|off", "True", "NA"
   "marker_size", "int", "set marker size", "fcp_params", "14"
   "marker_type", "str", "set marker type", "None", "o"
   "points", "bool", "turn markers on|off", "True", "NA"
   "rc_label_edge_color", "str", "hex color code for row/column labels border edges", "fcp_params", "#11aadd"
   "rc_label_fill_color", "str", "hex color code for row/column labels background", "fcp_params", "3232aa"
   "rc_label_font_size", "int", "font size for row/column labels", "fcp_params", "12"
   "rc_label_text_color", "str", "hex color code for row/column label text", "fcp_params", "#ffffff"
   "rc_label_text_style", "str", "define the style row/column label text. Use standard mpl styles like 'italic'", "fcp_params", "'normal'"
   "row", "str", "name of a column in df to use as a grouping variable for facet grid style plotting; each unique value from df[row] will represent a row of plots in the final figure", "None --> no column grouping", "Temperature [C]"
   "row_label", "str", "a custom label to display for each row in the facet grid plot", "None --> use the value of kwargs['row']", "Temp [C]"
   "row_labels_on", "bool", "toggle visibility of row grouping labels in facet grid", "True", "NA"
   "row_label_size", "int", "label height in pixel for row labels in pixels", "fcp_params", "45"
   "row_label_ws", "int", "whitespace in pixels between axis and row labels in pixels", "fcp_params", "30"
   "row_padding", "int", "whitespace between facet rows in pixels", "fcp_params", "20"
   "rows", "list", "list used to manually define the rows to use in the facet grid. These values must actually be in df[row]", "None", "[25, 75]"
   "save_ext", "str", "filename extension for saved figures", "png", ""
   "save_path", "str", "destination file folder for plots", "None", "C:\data"
   "scalar_x", "bool", "force scalar tick labels on the x-axis instead of powers of ten", "False", "NA"
   "scalar_y", "bool", "force scalar tick labels on the y-axis instead of powers of ten", "False", "NA"
   "sci_x", "bool", "force scientific notation for tick labels on x-axis", "False", "NA"
   "sci_y", "bool", "force scientific notation for tick labels on y-axis", "False", "NA"
   "sharex", "bool", "share plot range for x-axis", "True", "NA"
   "sharey", "bool", "share plot range for y-axis", "True", "NA"
   "show", "bool", "pop open plot after it is generated.  Otherwise, the plot is just saved", "False", "NA"
   "stat", "str", "statistic to apply to the y-data being plotted.", "None", "median"
   "stat_val", "str", "column name to which the statistic should be applied.  Options include: 'median', 'median_only', 'mean_only', and 'mean'.  When 'only' is in the stat value, median lines and median/mean data points are plotted.  Without 'only', median/mean lines and all raw data points are plotted.", "kwargs['x']", "'Voltage'"
   "tick_major_color", "str", "hex color code for major tick marks", "fcp_params", "#000000"
   "tick_minor_color", "str", "hex color code for minor tick marks", "fcp_params", "#bbbbbb"
   "tick_font_size", "int", "font size for tick labels", "fcp_params", "12"
   "tick_label_color", "str", "hex color code for tick labels", "fcp_params", "#bbbbbb"
   "tick_length", "int", "length of the tick marks", "fcp_params", "10"
   "tick_width", "int", "line width of the tick marks", "fcp_params", "3"
   "title", "str", "plot title", "None", "Sweet Plot"
   "title_edge_color", "str", "hex color code for edge of a box around the plot title", "fcp_params", "#ffffff"
   "title_fill_color", "str", "hex color code for fill of a box around the plot title", "fcp_params", "#ffffff"
   "title_text_color", "str", "hex color code for title color", "fcp_params", "#000000"
   "title_font_size", "int", "font size of plot title", "fcp_params", "16"
   "title_text_style", "str", "define the title style. Use standard mpl styles like 'italic'", "fcp_params", "'normal'"
   "twinx", "bool", "allow for twinning of x-axis for secondary y-axis", "False", "NA"
   "twiny", "bool", "allow for twinning of y-axis for secondary x-axis (not currently supported)", "False", "NA"
   "xlabel", "str", "label for x-axis", "kwargs['x']", ""
   "xmax", "float", "maximum x-value on x-axis", "None", "100"
   "xmin", "float", "minimum x-value of x-axis", "None", "-100"
   "xticks", "int", "specify the number of xticks (not currently supported)", "None (use default)", "4"
   "xtrans", "str", "translate the x-axis data.  Options include: 'abs' (absolute value), 'neg'/'negative' (negative value), 'inv'/'inverse' (1/data), or tuple of ('pow', int) (to raise to a power)", "None", "('pow', 2)"
   "ylabel", "str", "label for primary y-axis", "kwargs['y'] or kwargs['y'][0]", "Current [A]"
   "ymax", "float", "maximum y-value on y-axis", "None", "100"
   "ymin", "float", "minimum y-value of y-axis", "None", "-100"
   "yticks", "int", "specify the number of yticks (not currently supported)", "None (use default)", "4"
   "ytrans", "str", "translate the y-axis data.  Options include: 'abs' (absolute value), 'neg'/'negative' (negative value), 'inv'/'inverse' (1/data), or tuple of ('pow', int) (to raise to a power) [won't work with ``twinx``]", "None", "('pow', 2)"
   "ylabel2", "str", "label for secondary y-axis", "same as y[1]", "Voltage [V]"
   "ymax2", "float", "maximum y-value on secondary y-axis", "None", "100"
   "ymin2", "float", "minimum y-value on secondary y-axis", "None", "-100"
   "yticks2", "int", "specify the number of yticks2 (not currently supported)", "None (use default)", "4"

